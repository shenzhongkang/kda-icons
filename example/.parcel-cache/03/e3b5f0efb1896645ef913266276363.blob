"use strict";
var helpers = require("../example/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  function _interopDefault(ex) {
    return ex && typeof ex === 'object' && ('default' in ex) ? ex['default'] : ex;
  }
  var React = _interopDefault(require('react'));
  var classnames = _interopDefault(require('classnames'));
  var styled = _interopDefault(require('styled-components'));
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }
    return target;
  }
  function _taggedTemplateLiteralLoose(strings, raw) {
    if (!raw) {
      raw = strings.slice(0);
    }
    strings.raw = raw;
    return strings;
  }
  var _templateObject;
  var _excluded = ["color", "className", "el", "name", "size"];
  var IconNameArray = ['search'];
  var Icon = function Icon(_ref) {
    var _ref$color = _ref.color, color = _ref$color === void 0 ? 'currentColor' : _ref$color, className = _ref.className, _ref$el = _ref.el, IconElement = _ref$el === void 0 ? 'i' : _ref$el, name = _ref.name, _ref$size = _ref.size, size = _ref$size === void 0 ? '1em' : _ref$size, restProps = _objectWithoutPropertiesLoose(_ref, _excluded);
    // Returns svg data in object like { content: ''', viewbox: ... }, content paths are cleaned form fill='#010100'
    var getIconData = function getIconData() {
      switch (name) {
        case 'account_circle':
          return {
            viewbox: '0 0 24 24',
            content: React.createElement(React.Fragment, null, React.createElement("path", {
              d: "M0 0h24v24H0z",
              fill: "none"
            }), React.createElement("path", {
              d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
            }))
          };
        default:
          return null;
      }
    };
    var iconData = getIconData();
    if (!iconData) {
      console.warn('Icon does not exist', name);
      return null;
    }
    var IconClasses = classnames('kda-Icon', "kda-Icon--" + name, className);
    var Container = styled(IconElement)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose(["\n    backface-visibility: hidden;\n    color: inherit;\n    display: inline-block;\n    font-weight: 400;\n    font-style: normal;\n    line-height: 1;\n    min-height: 1em;\n    text-align: center;\n    vertical-align: middle;\n    width: auto;\n    > svg {\n      vertical-align: bottom;\n    }\n  "])));
    return React.createElement(Container, Object.assign({
      className: IconClasses,
      width: size,
      height: size
    }, restProps), React.createElement("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      fill: color,
      height: size,
      width: size,
      viewBox: iconData.viewbox
    }, iconData.content));
  };
  _c = Icon;
  exports.Icon = Icon;
  exports.IconNameArray = IconNameArray;
  var _c;
  $RefreshReg$(_c, "Icon");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
